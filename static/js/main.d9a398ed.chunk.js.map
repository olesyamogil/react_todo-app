{"version":3,"sources":["components/TodosFilter/TodosFilter.js","components/AppFooter/AppFooter.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/NewTodo/NewTodo.js","components/ToggleAll/ToggleAll.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["TodosFilter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","href","Component","AppFooter","style","display","items","filter","item","completed","length","components_TodosFilter_TodosFilter","type","onClick","handleClear","defaultProps","TodoItem","id","checked","onChange","handleChecked","htmlFor","body","data-button-id","handleDestroy","TodoList","map","TodoItem_TodoItem","key","NewTodo","handleChange","event","setState","text","target","value","_this2","onSubmit","preventDefault","handleSubmit","placeholder","ToggleAll","completedAll","Fragment","handleToggleAll","prevState","TodoApp","todos","concat","toConsumableArray","currentId","itemId","dataset","buttonId","element","flag","components_NewTodo_NewTodo","components_ToggleAll_ToggleAll","TodoList_TodoList","components_AppFooter_AppFooter","App","components_TodoApp_TodoApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d9a398ed.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TodosFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        <li>\n          <a href=\"#/\" className=\"selected\">All</a>\n        </li>\n\n        <li>\n          <a href=\"#/active\">Active</a>\n        </li>\n\n        <li>\n          <a href=\"#/completed\">Completed</a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default TodosFilter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TodosFilter from '../TodosFilter/TodosFilter';\n\nclass AppFooter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <footer className=\"footer\" style={{ display: 'block' }}>\n        <span className=\"todo-count\">\n          {this.props.items.filter(item => item.completed === false).length}\n          {' '}\n          items left\n        </span>\n\n        <TodosFilter />\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          style={{ display: 'block' }}\n          onClick={this.props.handleClear}\n        >\n        Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nAppFooter.defaultProps = {\n  items: [],\n  handleClear: {},\n};\n\nAppFooter.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object),\n  handleClear: PropTypes.func,\n};\n\nexport default AppFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodoItem(props) {\n  return (\n    <li className=\"\">\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={props.item.id}\n          checked={props.item.completed}\n          onChange={props.handleChecked}\n        />\n        <label htmlFor={props.item.id}>{props.item.body}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          data-button-id={props.item.id}\n          onClick={props.handleDestroy}\n        />\n      </div>\n    </li>\n  );\n}\n\nTodoItem.defaultProps = {\n  item: {},\n  handleChecked: {},\n  handleDestroy: {},\n};\n\nTodoItem.propTypes = {\n  item: PropTypes.objectOf(PropTypes.any),\n  handleChecked: PropTypes.func,\n  handleDestroy: PropTypes.func,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\n\nfunction TodoList(props) {\n  return (\n    <ul className=\"todo-list\">\n      {props.items.map(item => (\n        <TodoItem\n          item={item}\n          key={item.id}\n          handleDestroy={props.handleDestroy}\n          handleChecked={props.handleChecked}\n        />\n      ))}\n    </ul>\n  );\n}\n\nTodoList.defaultProps = {\n  items: [],\n  handleChecked: {},\n  handleDestroy: {},\n};\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object),\n  handleChecked: PropTypes.func,\n  handleDestroy: PropTypes.func,\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewTodo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({ text: event.target.value });\n  };\n\n  render() {\n    return (\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        this.props.handleSubmit(this.state.text);\n        this.setState({ text: '' });\n      }}\n      >\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={this.state.text}\n          onChange={this.handleChange}\n        />\n      </form>\n    );\n  }\n}\n\nNewTodo.defaultProps = {\n  handleSubmit: {},\n};\n\nNewTodo.propTypes = {\n  handleSubmit: PropTypes.func,\n};\n\nexport default NewTodo;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ToggleAll extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      completedAll: false,\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={this.state.checked}\n          onChange={() => {\n            this.props.handleToggleAll(this.state.completedAll);\n            this.setState(prevState => ({\n              completedAll: !prevState.completedAll,\n            }));\n          }\n          }\n        />\n        {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      </>\n    );\n  }\n}\n\nToggleAll.defaultProps = {\n  handleToggleAll: {},\n};\n\nToggleAll.propTypes = {\n  handleToggleAll: PropTypes.func,\n};\n\nexport default ToggleAll;\n","import React, { Component } from 'react';\nimport AppFooter from '../AppFooter/AppFooter';\nimport TodoList from '../TodoList/TodoList';\nimport NewTodo from '../NewTodo/NewTodo';\nimport ToggleAll from '../ToggleAll/ToggleAll';\n\nclass TodoApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      currentId: 1,\n    };\n  }\n\n  handleSubmit = (text) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        {\n          id: prevState.currentId,\n          body: text,\n          completed: false,\n        },\n      ],\n      currentId: prevState.currentId + 1,\n    }\n    ));\n  };\n\n  handleDestroy = (event) => {\n    const itemId = +event.target.dataset.buttonId;\n\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(element => element.id !== itemId),\n    }));\n  };\n\n  handleChecked = (event) => {\n    const itemId = +event.target.id;\n\n    this.setState(prevState => (\n      {\n        todos: prevState.todos.map((item) => {\n          if (item.id === itemId) {\n            // eslint-disable-next-line no-param-reassign\n            item.completed = !item.completed;\n          }\n\n          return item;\n        }),\n      }\n    ));\n  };\n\n  handleToggleAll = (flag) => {\n    this.setState(prevState => (\n      {\n        todos: prevState.todos.map((item) => {\n          // eslint-disable-next-line no-param-reassign\n          item.completed = !flag;\n\n          return item;\n        }),\n      }\n    ));\n  };\n\n  handleClear = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(element => !element.completed),\n    }));\n  };\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo handleSubmit={this.handleSubmit} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <ToggleAll handleToggleAll={this.handleToggleAll} />\n          <TodoList\n            items={this.state.todos}\n            handleDestroy={this.handleDestroy}\n            handleChecked={this.handleChecked}\n          />\n        </section>\n\n        <AppFooter\n          items={this.state.todos}\n          handleClear={this.handleClear}\n        />\n      </section>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoApp from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}