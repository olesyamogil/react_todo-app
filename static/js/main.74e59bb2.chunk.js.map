{"version":3,"sources":["components/TodosFilter/TodosFilter.js","components/AppFooter/AppFooter.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/NewTodo/NewTodo.js","components/ToggleAll/ToggleAll.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["TodosFilter","props","react_default","a","createElement","className","name","map","button","key","href","concat","filterState","onClick","onFilterChange","defaultProps","AppFooter","style","display","items","filter","item","completed","length","TodosFilter_TodosFilter","type","handleClear","TodoItem","id","checked","onChange","handleChecked","htmlFor","body","data-button-id","handleDestroy","TodoList","TodoItem_TodoItem","NewTodo","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","text","target","value","state","_this2","onSubmit","preventDefault","handleSubmit","placeholder","Component","ToggleAll","completedAll","Fragment","handleToggleAll","prevState","TodoApp","todos","toConsumableArray","currentId","itemId","dataset","buttonId","element","flag","filterType","storageToDoList","JSON","parse","localStorage","getItem","storageId","_objectSpread","toDoListToStorage","stringify","setItem","components_NewTodo_NewTodo","components_ToggleAll_ToggleAll","TodoList_TodoList","AppFooter_AppFooter","App","components_TodoApp_TodoApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.74e59bb2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodosFilter(props) {\n  const buttons = [\n    { name: 'All' },\n    { name: 'Active' },\n    { name: 'Completed' },\n  ];\n\n  return (\n    <ul className=\"filters\">\n      {\n        buttons.map(button => (\n          <li key={button.name}>\n            <a\n              href={`#/${button.name}`}\n              className={props.filterState === button.name ? `selected` : ``}\n              onClick={() => props.onFilterChange(button.name)}\n            >\n              {button.name}\n            </a>\n          </li>\n        ))\n      }\n    </ul>\n  );\n}\n\nTodosFilter.defaultProps = {\n  filterState: 'All',\n  onFilterChange: {},\n};\n\nTodosFilter.propTypes = {\n  filterState: PropTypes.string,\n  onFilterChange: PropTypes.func,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodosFilter from '../TodosFilter/TodosFilter';\n\nfunction AppFooter(props) {\n  return (\n    <footer className=\"footer\" style={{ display: 'block' }}>\n      <span className=\"todo-count\">\n        {props.items.filter(item => item.completed === false).length}\n        {' '}\n          items left\n      </span>\n\n      <TodosFilter\n        onFilterChange={props.onFilterChange}\n        filterState={props.filterState}\n      />\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n        onClick={props.handleClear}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nAppFooter.defaultProps = {\n  items: [],\n  handleClear: {},\n  onFilterChange: {},\n  filterState: 'All',\n};\n\nAppFooter.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object),\n  handleClear: PropTypes.func,\n  onFilterChange: PropTypes.func,\n  filterState: PropTypes.string,\n};\n\nexport default AppFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodoItem(props) {\n  return (\n    <li className=\"\">\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={props.item.id}\n          checked={props.item.completed}\n          onChange={props.handleChecked}\n        />\n        <label htmlFor={props.item.id}>{props.item.body}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          data-button-id={props.item.id}\n          onClick={props.handleDestroy}\n        />\n      </div>\n    </li>\n  );\n}\n\nTodoItem.defaultProps = {\n  item: {},\n  handleChecked: {},\n  handleDestroy: {},\n};\n\nTodoItem.propTypes = {\n  item: PropTypes.objectOf(PropTypes.any),\n  handleChecked: PropTypes.func,\n  handleDestroy: PropTypes.func,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\n\nfunction TodoList(props) {\n  return (\n    <ul className=\"todo-list\">\n      {props.items.map(item => (\n        <TodoItem\n          item={item}\n          key={item.id}\n          handleDestroy={props.handleDestroy}\n          handleChecked={props.handleChecked}\n        />\n      ))}\n    </ul>\n  );\n}\n\nTodoList.defaultProps = {\n  items: [],\n  handleChecked: {},\n  handleDestroy: {},\n};\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object),\n  handleChecked: PropTypes.func,\n  handleDestroy: PropTypes.func,\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewTodo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({ text: event.target.value });\n  };\n\n  render() {\n    return (\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        this.props.handleSubmit(this.state.text);\n        this.setState({ text: '' });\n      }}\n      >\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={this.state.text}\n          onChange={this.handleChange}\n        />\n      </form>\n    );\n  }\n}\n\nNewTodo.defaultProps = {\n  handleSubmit: {},\n};\n\nNewTodo.propTypes = {\n  handleSubmit: PropTypes.func,\n};\n\nexport default NewTodo;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ToggleAll extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      completedAll: false,\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={this.state.checked}\n          onChange={() => {\n            this.props.handleToggleAll(this.state.completedAll);\n            this.setState(prevState => ({\n              completedAll: !prevState.completedAll,\n            }));\n          }\n          }\n        />\n        {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      </>\n    );\n  }\n}\n\nToggleAll.defaultProps = {\n  handleToggleAll: {},\n};\n\nToggleAll.propTypes = {\n  handleToggleAll: PropTypes.func,\n};\n\nexport default ToggleAll;\n","import React, { Component } from 'react';\nimport AppFooter from '../AppFooter/AppFooter';\nimport TodoList from '../TodoList/TodoList';\nimport NewTodo from '../NewTodo/NewTodo';\nimport ToggleAll from '../ToggleAll/ToggleAll';\n\nclass TodoApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      currentId: 1,\n      filterType: 'All',\n    };\n  }\n\n  componentDidMount() {\n    const storageToDoList = JSON.parse(localStorage.getItem('todos')) || [];\n    const storageId = localStorage.getItem('currentId');\n\n    this.setState(prevState => ({\n      ...prevState,\n      todos: [...storageToDoList],\n      currentId: +storageId,\n    }));\n  }\n\n  componentDidUpdate() {\n    const toDoListToStorage = JSON.stringify(this.state.todos);\n\n    localStorage.setItem('todos', toDoListToStorage);\n    localStorage.setItem('currentId', this.state.currentId);\n  }\n\n  handleSubmit = (text) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        {\n          id: prevState.currentId,\n          body: text,\n          completed: false,\n        },\n      ],\n      currentId: prevState.currentId + 1,\n    }\n    ));\n  };\n\n  handleDestroy = (event) => {\n    const itemId = +event.target.dataset.buttonId;\n\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(element => element.id !== itemId),\n    }));\n  };\n\n  handleChecked = (event) => {\n    const itemId = +event.target.id;\n\n    this.setState(prevState => (\n      {\n        todos: prevState.todos.map((item) => {\n          if (item.id === itemId) {\n            // eslint-disable-next-line no-param-reassign\n            item.completed = !item.completed;\n          }\n\n          return item;\n        }),\n      }\n    ));\n  };\n\n  handleToggleAll = (flag) => {\n    this.setState(prevState => (\n      {\n        todos: prevState.todos.map((item) => {\n          // eslint-disable-next-line no-param-reassign\n          item.completed = !flag;\n\n          return item;\n        }),\n      }\n    ));\n  };\n\n  handleClear = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(element => !element.completed),\n    }));\n  };\n\n  onFilterChange = (filterType) => {\n    this.setState({ filterType });\n  };\n\n  filter = (items, filterType) => {\n    switch (filterType) {\n      case 'All':\n        return items;\n      case 'Active':\n        return items.filter(item => !item.completed);\n      case 'Completed':\n        return items.filter(item => item.completed);\n      default:\n        return items;\n    }\n  };\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo handleSubmit={this.handleSubmit} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <ToggleAll handleToggleAll={this.handleToggleAll} />\n          <TodoList\n            items={this.filter(this.state.todos, this.state.filterType)}\n            handleDestroy={this.handleDestroy}\n            handleChecked={this.handleChecked}\n          />\n        </section>\n\n        <AppFooter\n          items={this.state.todos}\n          handleClear={this.handleClear}\n          onFilterChange={this.onFilterChange}\n          filterState={this.state.filterType}\n        />\n      </section>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoApp from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}